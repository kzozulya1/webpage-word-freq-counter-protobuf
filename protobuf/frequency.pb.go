// Code generated by protoc-gen-go. DO NOT EDIT.
// source: frequency.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PageWordFrequency struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PageUrl              string   `protobuf:"bytes,2,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	PageTitle            string   `protobuf:"bytes,3,opt,name=page_title,json=pageTitle,proto3" json:"page_title,omitempty"`
	Words                []*Word  `protobuf:"bytes,4,rep,name=words,proto3" json:"words,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageWordFrequency) Reset()         { *m = PageWordFrequency{} }
func (m *PageWordFrequency) String() string { return proto.CompactTextString(m) }
func (*PageWordFrequency) ProtoMessage()    {}
func (*PageWordFrequency) Descriptor() ([]byte, []int) {
	return fileDescriptor_717812b2e414acee, []int{0}
}

func (m *PageWordFrequency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageWordFrequency.Unmarshal(m, b)
}
func (m *PageWordFrequency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageWordFrequency.Marshal(b, m, deterministic)
}
func (m *PageWordFrequency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageWordFrequency.Merge(m, src)
}
func (m *PageWordFrequency) XXX_Size() int {
	return xxx_messageInfo_PageWordFrequency.Size(m)
}
func (m *PageWordFrequency) XXX_DiscardUnknown() {
	xxx_messageInfo_PageWordFrequency.DiscardUnknown(m)
}

var xxx_messageInfo_PageWordFrequency proto.InternalMessageInfo

func (m *PageWordFrequency) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PageWordFrequency) GetPageUrl() string {
	if m != nil {
		return m.PageUrl
	}
	return ""
}

func (m *PageWordFrequency) GetPageTitle() string {
	if m != nil {
		return m.PageTitle
	}
	return ""
}

func (m *PageWordFrequency) GetWords() []*Word {
	if m != nil {
		return m.Words
	}
	return nil
}

type Word struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Word) Reset()         { *m = Word{} }
func (m *Word) String() string { return proto.CompactTextString(m) }
func (*Word) ProtoMessage()    {}
func (*Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_717812b2e414acee, []int{1}
}

func (m *Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Word.Unmarshal(m, b)
}
func (m *Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Word.Marshal(b, m, deterministic)
}
func (m *Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Word.Merge(m, src)
}
func (m *Word) XXX_Size() int {
	return xxx_messageInfo_Word.Size(m)
}
func (m *Word) XXX_DiscardUnknown() {
	xxx_messageInfo_Word.DiscardUnknown(m)
}

var xxx_messageInfo_Word proto.InternalMessageInfo

func (m *Word) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Word) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Word) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// Created a blank get request
type GetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_717812b2e414acee, []int{2}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

type Response struct {
	Created              bool                 `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	PageWordFreq         *PageWordFrequency   `protobuf:"bytes,2,opt,name=pageWordFreq,proto3" json:"pageWordFreq,omitempty"`
	PageWordFreqs        []*PageWordFrequency `protobuf:"bytes,3,rep,name=pageWordFreqs,proto3" json:"pageWordFreqs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_717812b2e414acee, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetPageWordFreq() *PageWordFrequency {
	if m != nil {
		return m.PageWordFreq
	}
	return nil
}

func (m *Response) GetPageWordFreqs() []*PageWordFrequency {
	if m != nil {
		return m.PageWordFreqs
	}
	return nil
}

func init() {
	proto.RegisterType((*PageWordFrequency)(nil), "protobuf.PageWordFrequency")
	proto.RegisterType((*Word)(nil), "protobuf.Word")
	proto.RegisterType((*GetRequest)(nil), "protobuf.GetRequest")
	proto.RegisterType((*Response)(nil), "protobuf.Response")
}

func init() { proto.RegisterFile("frequency.proto", fileDescriptor_717812b2e414acee) }

var fileDescriptor_717812b2e414acee = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x35, 0x6d, 0x63, 0xd3, 0x69, 0xad, 0x38, 0x04, 0x5c, 0x15, 0xa1, 0x04, 0x0f, 0x3d, 0xe5,
	0x10, 0x3f, 0x40, 0xac, 0x60, 0x2f, 0x1e, 0x64, 0x55, 0x3c, 0x4a, 0x9a, 0x4c, 0x4b, 0x20, 0x64,
	0xe3, 0x66, 0x53, 0xf1, 0xec, 0xcf, 0xf4, 0x33, 0x65, 0x37, 0x86, 0x34, 0x44, 0x7a, 0x5a, 0xde,
	0x7b, 0x33, 0xef, 0xcd, 0xcc, 0xc2, 0xe9, 0x5a, 0xd2, 0x67, 0x49, 0x59, 0xf4, 0xed, 0xe7, 0x52,
	0x28, 0x81, 0x8e, 0x79, 0x56, 0xe5, 0xda, 0xfb, 0xb1, 0xe0, 0xec, 0x39, 0xdc, 0xd0, 0xbb, 0x90,
	0xf1, 0x63, 0x5d, 0x85, 0x53, 0xe8, 0x25, 0x31, 0xb3, 0x66, 0xd6, 0x7c, 0xc4, 0x7b, 0x49, 0x8c,
	0x17, 0xe0, 0xe4, 0xe1, 0x86, 0x3e, 0x4a, 0x99, 0xb2, 0x9e, 0x61, 0x87, 0x1a, 0xbf, 0xc9, 0x14,
	0xaf, 0x01, 0x8c, 0xa4, 0x12, 0x95, 0x12, 0xeb, 0x1b, 0x71, 0xa4, 0x99, 0x57, 0x4d, 0xe0, 0x0d,
	0xd8, 0x5f, 0x42, 0xc6, 0x05, 0x1b, 0xcc, 0xfa, 0xf3, 0x71, 0x30, 0xf5, 0xeb, 0x64, 0x5f, 0x27,
	0xf2, 0x4a, 0xf4, 0x16, 0x30, 0xd0, 0xb0, 0x93, 0xeb, 0x82, 0xbd, 0x0d, 0xd3, 0x92, 0xfe, 0x42,
	0x2b, 0xa0, 0xd9, 0x48, 0x94, 0x99, 0x32, 0x69, 0x36, 0xaf, 0x80, 0x37, 0x01, 0x58, 0x92, 0xe2,
	0x7a, 0x85, 0x42, 0x79, 0x3b, 0x0b, 0x1c, 0x4e, 0x45, 0x2e, 0xb2, 0x82, 0x90, 0xc1, 0x30, 0x92,
	0x14, 0x2a, 0xaa, 0xbc, 0x1d, 0x5e, 0x43, 0xbc, 0x83, 0x49, 0xbe, 0xb7, 0xbd, 0xc9, 0x19, 0x07,
	0x57, 0xcd, 0x94, 0x9d, 0xdb, 0xf0, 0x56, 0x03, 0xde, 0xc3, 0xc9, 0x3e, 0x2e, 0x58, 0xdf, 0xec,
	0x79, 0xd0, 0xa1, 0xdd, 0x11, 0xec, 0x2c, 0x70, 0x5b, 0x05, 0x2f, 0x24, 0xb7, 0x49, 0x44, 0xf8,
	0x04, 0xe7, 0x0f, 0x66, 0xce, 0xee, 0x07, 0x1d, 0xf2, 0xbf, 0xc4, 0x46, 0xac, 0x4f, 0xe0, 0x1d,
	0xe1, 0x02, 0xdc, 0x25, 0xa9, 0xae, 0x95, 0xdb, 0x54, 0x37, 0xf7, 0xfb, 0xdf, 0x63, 0x75, 0x6c,
	0xc8, 0xdb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xad, 0x8f, 0x16, 0x21, 0x51, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WordFrequencyServiceClient is the client API for WordFrequencyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WordFrequencyServiceClient interface {
	CreatePageWordFrequency(ctx context.Context, in *PageWordFrequency, opts ...grpc.CallOption) (*Response, error)
	GetPageWordFrequency(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Response, error)
}

type wordFrequencyServiceClient struct {
	cc *grpc.ClientConn
}

func NewWordFrequencyServiceClient(cc *grpc.ClientConn) WordFrequencyServiceClient {
	return &wordFrequencyServiceClient{cc}
}

func (c *wordFrequencyServiceClient) CreatePageWordFrequency(ctx context.Context, in *PageWordFrequency, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/protobuf.WordFrequencyService/CreatePageWordFrequency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wordFrequencyServiceClient) GetPageWordFrequency(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/protobuf.WordFrequencyService/GetPageWordFrequency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WordFrequencyServiceServer is the server API for WordFrequencyService service.
type WordFrequencyServiceServer interface {
	CreatePageWordFrequency(context.Context, *PageWordFrequency) (*Response, error)
	GetPageWordFrequency(context.Context, *GetRequest) (*Response, error)
}

// UnimplementedWordFrequencyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWordFrequencyServiceServer struct {
}

func (*UnimplementedWordFrequencyServiceServer) CreatePageWordFrequency(ctx context.Context, req *PageWordFrequency) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePageWordFrequency not implemented")
}
func (*UnimplementedWordFrequencyServiceServer) GetPageWordFrequency(ctx context.Context, req *GetRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPageWordFrequency not implemented")
}

func RegisterWordFrequencyServiceServer(s *grpc.Server, srv WordFrequencyServiceServer) {
	s.RegisterService(&_WordFrequencyService_serviceDesc, srv)
}

func _WordFrequencyService_CreatePageWordFrequency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageWordFrequency)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WordFrequencyServiceServer).CreatePageWordFrequency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.WordFrequencyService/CreatePageWordFrequency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WordFrequencyServiceServer).CreatePageWordFrequency(ctx, req.(*PageWordFrequency))
	}
	return interceptor(ctx, in, info, handler)
}

func _WordFrequencyService_GetPageWordFrequency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WordFrequencyServiceServer).GetPageWordFrequency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.WordFrequencyService/GetPageWordFrequency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WordFrequencyServiceServer).GetPageWordFrequency(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WordFrequencyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.WordFrequencyService",
	HandlerType: (*WordFrequencyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePageWordFrequency",
			Handler:    _WordFrequencyService_CreatePageWordFrequency_Handler,
		},
		{
			MethodName: "GetPageWordFrequency",
			Handler:    _WordFrequencyService_GetPageWordFrequency_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "frequency.proto",
}
