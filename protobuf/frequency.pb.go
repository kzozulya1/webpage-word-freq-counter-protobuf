// Code generated by protoc-gen-go. DO NOT EDIT.
// source: frequency.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PageWordFrequency struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PageUrl              string   `protobuf:"bytes,2,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	PageTitle            string   `protobuf:"bytes,3,opt,name=page_title,json=pageTitle,proto3" json:"page_title,omitempty"`
	Words                []*Word  `protobuf:"bytes,4,rep,name=words,proto3" json:"words,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageWordFrequency) Reset()         { *m = PageWordFrequency{} }
func (m *PageWordFrequency) String() string { return proto.CompactTextString(m) }
func (*PageWordFrequency) ProtoMessage()    {}
func (*PageWordFrequency) Descriptor() ([]byte, []int) {
	return fileDescriptor_717812b2e414acee, []int{0}
}

func (m *PageWordFrequency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageWordFrequency.Unmarshal(m, b)
}
func (m *PageWordFrequency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageWordFrequency.Marshal(b, m, deterministic)
}
func (m *PageWordFrequency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageWordFrequency.Merge(m, src)
}
func (m *PageWordFrequency) XXX_Size() int {
	return xxx_messageInfo_PageWordFrequency.Size(m)
}
func (m *PageWordFrequency) XXX_DiscardUnknown() {
	xxx_messageInfo_PageWordFrequency.DiscardUnknown(m)
}

var xxx_messageInfo_PageWordFrequency proto.InternalMessageInfo

func (m *PageWordFrequency) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PageWordFrequency) GetPageUrl() string {
	if m != nil {
		return m.PageUrl
	}
	return ""
}

func (m *PageWordFrequency) GetPageTitle() string {
	if m != nil {
		return m.PageTitle
	}
	return ""
}

func (m *PageWordFrequency) GetWords() []*Word {
	if m != nil {
		return m.Words
	}
	return nil
}

type Word struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Word) Reset()         { *m = Word{} }
func (m *Word) String() string { return proto.CompactTextString(m) }
func (*Word) ProtoMessage()    {}
func (*Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_717812b2e414acee, []int{1}
}

func (m *Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Word.Unmarshal(m, b)
}
func (m *Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Word.Marshal(b, m, deterministic)
}
func (m *Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Word.Merge(m, src)
}
func (m *Word) XXX_Size() int {
	return xxx_messageInfo_Word.Size(m)
}
func (m *Word) XXX_DiscardUnknown() {
	xxx_messageInfo_Word.DiscardUnknown(m)
}

var xxx_messageInfo_Word proto.InternalMessageInfo

func (m *Word) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Word) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Word) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// Request filter: no params mean fetch all records, page_url + word apply filter on all records
type GetRequestFilter struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PageUrl              string   `protobuf:"bytes,2,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	Word                 string   `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequestFilter) Reset()         { *m = GetRequestFilter{} }
func (m *GetRequestFilter) String() string { return proto.CompactTextString(m) }
func (*GetRequestFilter) ProtoMessage()    {}
func (*GetRequestFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_717812b2e414acee, []int{2}
}

func (m *GetRequestFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequestFilter.Unmarshal(m, b)
}
func (m *GetRequestFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequestFilter.Marshal(b, m, deterministic)
}
func (m *GetRequestFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequestFilter.Merge(m, src)
}
func (m *GetRequestFilter) XXX_Size() int {
	return xxx_messageInfo_GetRequestFilter.Size(m)
}
func (m *GetRequestFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequestFilter.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequestFilter proto.InternalMessageInfo

func (m *GetRequestFilter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetRequestFilter) GetPageUrl() string {
	if m != nil {
		return m.PageUrl
	}
	return ""
}

func (m *GetRequestFilter) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

//Common response object
type Response struct {
	//True if record was created
	Created bool `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	//True if record was updated
	Updated bool `protobuf:"varint,2,opt,name=updated,proto3" json:"updated,omitempty"`
	//True if record was removed
	Removed bool `protobuf:"varint,3,opt,name=removed,proto3" json:"removed,omitempty"`
	//Used when create / update records
	PageWordFreq *PageWordFrequency `protobuf:"bytes,4,opt,name=pageWordFreq,proto3" json:"pageWordFreq,omitempty"`
	//Array, used when response with GetPageWordFrequency
	PageWordFreqs        []*PageWordFrequency `protobuf:"bytes,5,rep,name=pageWordFreqs,proto3" json:"pageWordFreqs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_717812b2e414acee, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

func (m *Response) GetRemoved() bool {
	if m != nil {
		return m.Removed
	}
	return false
}

func (m *Response) GetPageWordFreq() *PageWordFrequency {
	if m != nil {
		return m.PageWordFreq
	}
	return nil
}

func (m *Response) GetPageWordFreqs() []*PageWordFrequency {
	if m != nil {
		return m.PageWordFreqs
	}
	return nil
}

func init() {
	proto.RegisterType((*PageWordFrequency)(nil), "protobuf.PageWordFrequency")
	proto.RegisterType((*Word)(nil), "protobuf.Word")
	proto.RegisterType((*GetRequestFilter)(nil), "protobuf.GetRequestFilter")
	proto.RegisterType((*Response)(nil), "protobuf.Response")
}

func init() { proto.RegisterFile("frequency.proto", fileDescriptor_717812b2e414acee) }

var fileDescriptor_717812b2e414acee = []byte{
	// 357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xc1, 0x4e, 0xc2, 0x40,
	0x14, 0xb4, 0xa5, 0x95, 0xf2, 0x50, 0xd4, 0x0d, 0x89, 0x2b, 0xc6, 0x48, 0x1a, 0x0f, 0x9c, 0x38,
	0xe0, 0x07, 0x18, 0x35, 0x01, 0x13, 0x0f, 0xea, 0x0a, 0xf1, 0x68, 0x4a, 0xfb, 0x20, 0x4d, 0x2a,
	0x5b, 0xb7, 0x5b, 0x8c, 0x67, 0x7e, 0xd3, 0x8f, 0x31, 0xbb, 0x4b, 0x03, 0xd8, 0x48, 0x62, 0xe2,
	0xa9, 0x9d, 0x99, 0x7d, 0x33, 0x9d, 0xb7, 0x85, 0x83, 0x89, 0xc0, 0xf7, 0x1c, 0x67, 0xe1, 0x67,
	0x37, 0x15, 0x5c, 0x72, 0xe2, 0xe9, 0xc7, 0x38, 0x9f, 0xf8, 0x0b, 0x0b, 0x8e, 0x1e, 0x83, 0x29,
	0xbe, 0x70, 0x11, 0xf5, 0x8b, 0x53, 0xa4, 0x01, 0x76, 0x1c, 0x51, 0xab, 0x6d, 0x75, 0x6a, 0xcc,
	0x8e, 0x23, 0x72, 0x02, 0x5e, 0x1a, 0x4c, 0xf1, 0x35, 0x17, 0x09, 0xb5, 0x35, 0x5b, 0x55, 0x78,
	0x24, 0x12, 0x72, 0x06, 0xa0, 0x25, 0x19, 0xcb, 0x04, 0x69, 0x45, 0x8b, 0x35, 0xc5, 0x0c, 0x15,
	0x41, 0x2e, 0xc0, 0xfd, 0xe0, 0x22, 0xca, 0xa8, 0xd3, 0xae, 0x74, 0xea, 0xbd, 0x46, 0xb7, 0x48,
	0xee, 0xaa, 0x44, 0x66, 0x44, 0xff, 0x06, 0x1c, 0x05, 0x4b, 0xb9, 0x4d, 0x70, 0xe7, 0x41, 0x92,
	0xe3, 0x32, 0xd4, 0x00, 0xc5, 0x86, 0x3c, 0x9f, 0x49, 0x9d, 0xe6, 0x32, 0x03, 0xfc, 0x27, 0x38,
	0x1c, 0xa0, 0x64, 0xaa, 0x42, 0x26, 0xfb, 0x71, 0x22, 0x51, 0xfc, 0xa5, 0x07, 0x01, 0x47, 0x7d,
	0xcb, 0xb2, 0x81, 0x7e, 0xf7, 0xbf, 0x2c, 0xf0, 0x18, 0x66, 0x29, 0x9f, 0x65, 0x48, 0x28, 0x54,
	0x43, 0x81, 0x81, 0x44, 0x63, 0xe8, 0xb1, 0x02, 0x2a, 0x25, 0x4f, 0x23, 0xad, 0xd8, 0x46, 0x59,
	0x42, 0xa5, 0x08, 0x7c, 0xe3, 0x73, 0x34, 0xbe, 0x1e, 0x2b, 0x20, 0xb9, 0x82, 0xbd, 0x74, 0x6d,
	0xed, 0xd4, 0x69, 0x5b, 0x9d, 0x7a, 0xef, 0x74, 0xb5, 0x9e, 0xd2, 0xa5, 0xb0, 0x8d, 0x01, 0x72,
	0x0d, 0xfb, 0xeb, 0x38, 0xa3, 0xae, 0x5e, 0xf0, 0x56, 0x87, 0xcd, 0x89, 0xde, 0xc2, 0x86, 0xe6,
	0xc6, 0x81, 0x67, 0x14, 0xf3, 0x38, 0x44, 0x32, 0x84, 0xf3, 0x91, 0x6e, 0xf0, 0x20, 0x6e, 0x75,
	0xc7, 0xf2, 0x1f, 0xb2, 0x2d, 0xa7, 0x45, 0x56, 0x62, 0xb1, 0x3e, 0x7f, 0x87, 0xdc, 0xc3, 0x31,
	0xd3, 0xed, 0xcb, 0x6e, 0xad, 0xd5, 0xc0, 0xcf, 0x3b, 0xfc, 0xc5, 0xec, 0x0e, 0x9a, 0x03, 0x94,
	0xff, 0xe0, 0x34, 0xde, 0xd5, 0xe4, 0xe5, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x52, 0x75, 0xe7,
	0xe3, 0x25, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WordFrequencyServiceClient is the client API for WordFrequencyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WordFrequencyServiceClient interface {
	//Create or Update record
	UpdateOrCreatePageWordFrequency(ctx context.Context, in *PageWordFrequency, opts ...grpc.CallOption) (*Response, error)
	//Remove record by GetRequestFilter.page_url
	RemovePageWordFrequency(ctx context.Context, in *GetRequestFilter, opts ...grpc.CallOption) (*Response, error)
	//Get all records, or with applied filters GetRequestFilter.page_url / GetRequestFilter.word
	GetPageWordFrequency(ctx context.Context, in *GetRequestFilter, opts ...grpc.CallOption) (*Response, error)
}

type wordFrequencyServiceClient struct {
	cc *grpc.ClientConn
}

func NewWordFrequencyServiceClient(cc *grpc.ClientConn) WordFrequencyServiceClient {
	return &wordFrequencyServiceClient{cc}
}

func (c *wordFrequencyServiceClient) UpdateOrCreatePageWordFrequency(ctx context.Context, in *PageWordFrequency, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/protobuf.WordFrequencyService/UpdateOrCreatePageWordFrequency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wordFrequencyServiceClient) RemovePageWordFrequency(ctx context.Context, in *GetRequestFilter, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/protobuf.WordFrequencyService/RemovePageWordFrequency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wordFrequencyServiceClient) GetPageWordFrequency(ctx context.Context, in *GetRequestFilter, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/protobuf.WordFrequencyService/GetPageWordFrequency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WordFrequencyServiceServer is the server API for WordFrequencyService service.
type WordFrequencyServiceServer interface {
	//Create or Update record
	UpdateOrCreatePageWordFrequency(context.Context, *PageWordFrequency) (*Response, error)
	//Remove record by GetRequestFilter.page_url
	RemovePageWordFrequency(context.Context, *GetRequestFilter) (*Response, error)
	//Get all records, or with applied filters GetRequestFilter.page_url / GetRequestFilter.word
	GetPageWordFrequency(context.Context, *GetRequestFilter) (*Response, error)
}

// UnimplementedWordFrequencyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWordFrequencyServiceServer struct {
}

func (*UnimplementedWordFrequencyServiceServer) UpdateOrCreatePageWordFrequency(ctx context.Context, req *PageWordFrequency) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrCreatePageWordFrequency not implemented")
}
func (*UnimplementedWordFrequencyServiceServer) RemovePageWordFrequency(ctx context.Context, req *GetRequestFilter) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePageWordFrequency not implemented")
}
func (*UnimplementedWordFrequencyServiceServer) GetPageWordFrequency(ctx context.Context, req *GetRequestFilter) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPageWordFrequency not implemented")
}

func RegisterWordFrequencyServiceServer(s *grpc.Server, srv WordFrequencyServiceServer) {
	s.RegisterService(&_WordFrequencyService_serviceDesc, srv)
}

func _WordFrequencyService_UpdateOrCreatePageWordFrequency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageWordFrequency)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WordFrequencyServiceServer).UpdateOrCreatePageWordFrequency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.WordFrequencyService/UpdateOrCreatePageWordFrequency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WordFrequencyServiceServer).UpdateOrCreatePageWordFrequency(ctx, req.(*PageWordFrequency))
	}
	return interceptor(ctx, in, info, handler)
}

func _WordFrequencyService_RemovePageWordFrequency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequestFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WordFrequencyServiceServer).RemovePageWordFrequency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.WordFrequencyService/RemovePageWordFrequency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WordFrequencyServiceServer).RemovePageWordFrequency(ctx, req.(*GetRequestFilter))
	}
	return interceptor(ctx, in, info, handler)
}

func _WordFrequencyService_GetPageWordFrequency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequestFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WordFrequencyServiceServer).GetPageWordFrequency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.WordFrequencyService/GetPageWordFrequency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WordFrequencyServiceServer).GetPageWordFrequency(ctx, req.(*GetRequestFilter))
	}
	return interceptor(ctx, in, info, handler)
}

var _WordFrequencyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.WordFrequencyService",
	HandlerType: (*WordFrequencyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateOrCreatePageWordFrequency",
			Handler:    _WordFrequencyService_UpdateOrCreatePageWordFrequency_Handler,
		},
		{
			MethodName: "RemovePageWordFrequency",
			Handler:    _WordFrequencyService_RemovePageWordFrequency_Handler,
		},
		{
			MethodName: "GetPageWordFrequency",
			Handler:    _WordFrequencyService_GetPageWordFrequency_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "frequency.proto",
}
